// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class BlacklistUpdated extends ethereum.Event {
  get params(): BlacklistUpdated__Params {
    return new BlacklistUpdated__Params(this);
  }
}

export class BlacklistUpdated__Params {
  _event: BlacklistUpdated;

  constructor(event: BlacklistUpdated) {
    this._event = event;
  }

  get which(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get accessNow(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class BuyEnableUpdated extends ethereum.Event {
  get params(): BuyEnableUpdated__Params {
    return new BuyEnableUpdated__Params(this);
  }
}

export class BuyEnableUpdated__Params {
  _event: BuyEnableUpdated;

  constructor(event: BuyEnableUpdated) {
    this._event = event;
  }

  get oldAccess(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get newAccess(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class InsuranceFeeUpdated extends ethereum.Event {
  get params(): InsuranceFeeUpdated__Params {
    return new InsuranceFeeUpdated__Params(this);
  }
}

export class InsuranceFeeUpdated__Params {
  _event: InsuranceFeeUpdated;

  constructor(event: InsuranceFeeUpdated) {
    this._event = event;
  }

  get oldInsuranceFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newInsuranceFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InsuranceFundsWalletUpdated extends ethereum.Event {
  get params(): InsuranceFundsWalletUpdated__Params {
    return new InsuranceFundsWalletUpdated__Params(this);
  }
}

export class InsuranceFundsWalletUpdated__Params {
  _event: InsuranceFundsWalletUpdated;

  constructor(event: InsuranceFundsWalletUpdated) {
    this._event = event;
  }

  get oldInsuranceFundsWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newInsuranceFundsWallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class InsurancePurchased extends ethereum.Event {
  get params(): InsurancePurchased__Params {
    return new InsurancePurchased__Params(this);
  }
}

export class InsurancePurchased__Params {
  _event: InsurancePurchased;

  constructor(event: InsurancePurchased) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get by(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quantities(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get insuranceAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get latestPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get txHash(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class MinerNftUpdated extends ethereum.Event {
  get params(): MinerNftUpdated__Params {
    return new MinerNftUpdated__Params(this);
  }
}

export class MinerNftUpdated__Params {
  _event: MinerNftUpdated;

  constructor(event: MinerNftUpdated) {
    this._event = event;
  }

  get oldMinerNft(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newMinerNft(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SignerUpdated extends ethereum.Event {
  get params(): SignerUpdated__Params {
    return new SignerUpdated__Params(this);
  }
}

export class SignerUpdated__Params {
  _event: SignerUpdated;

  constructor(event: SignerUpdated) {
    this._event = event;
  }

  get oldSigner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newSigner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TokenRegistryUpdated extends ethereum.Event {
  get params(): TokenRegistryUpdated__Params {
    return new TokenRegistryUpdated__Params(this);
  }
}

export class TokenRegistryUpdated__Params {
  _event: TokenRegistryUpdated;

  constructor(event: TokenRegistryUpdated) {
    this._event = event;
  }

  get oldTokenRegistry(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newTokenRegistry(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Insurance extends ethereum.SmartContract {
  static bind(address: Address): Insurance {
    return new Insurance("Insurance", address);
  }

  blacklistAddress(param0: Address): boolean {
    let result = super.call(
      "blacklistAddress",
      "blacklistAddress(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_blacklistAddress(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "blacklistAddress",
      "blacklistAddress(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  buyEnabled(): boolean {
    let result = super.call("buyEnabled", "buyEnabled():(bool)", []);

    return result[0].toBoolean();
  }

  try_buyEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall("buyEnabled", "buyEnabled():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  insuranceFeePPM(): BigInt {
    let result = super.call(
      "insuranceFeePPM",
      "insuranceFeePPM():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_insuranceFeePPM(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "insuranceFeePPM",
      "insuranceFeePPM():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  insuranceFundsWallet(): Address {
    let result = super.call(
      "insuranceFundsWallet",
      "insuranceFundsWallet():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_insuranceFundsWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "insuranceFundsWallet",
      "insuranceFundsWallet():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  minerNft(): Address {
    let result = super.call("minerNft", "minerNft():(address)", []);

    return result[0].toAddress();
  }

  try_minerNft(): ethereum.CallResult<Address> {
    let result = super.tryCall("minerNft", "minerNft():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  signerWallet(): Address {
    let result = super.call("signerWallet", "signerWallet():(address)", []);

    return result[0].toAddress();
  }

  try_signerWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("signerWallet", "signerWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenRegistry(): Address {
    let result = super.call("tokenRegistry", "tokenRegistry():(address)", []);

    return result[0].toAddress();
  }

  try_tokenRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenRegistry",
      "tokenRegistry():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get insuranceFundsWalletAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get signerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get minerNftAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get tokenRegistryAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get insuranceFeePPMInit(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class ChangeSignerCall extends ethereum.Call {
  get inputs(): ChangeSignerCall__Inputs {
    return new ChangeSignerCall__Inputs(this);
  }

  get outputs(): ChangeSignerCall__Outputs {
    return new ChangeSignerCall__Outputs(this);
  }
}

export class ChangeSignerCall__Inputs {
  _call: ChangeSignerCall;

  constructor(call: ChangeSignerCall) {
    this._call = call;
  }

  get newSigner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeSignerCall__Outputs {
  _call: ChangeSignerCall;

  constructor(call: ChangeSignerCall) {
    this._call = call;
  }
}

export class EnableBuyCall extends ethereum.Call {
  get inputs(): EnableBuyCall__Inputs {
    return new EnableBuyCall__Inputs(this);
  }

  get outputs(): EnableBuyCall__Outputs {
    return new EnableBuyCall__Outputs(this);
  }
}

export class EnableBuyCall__Inputs {
  _call: EnableBuyCall;

  constructor(call: EnableBuyCall) {
    this._call = call;
  }

  get enabled(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class EnableBuyCall__Outputs {
  _call: EnableBuyCall;

  constructor(call: EnableBuyCall) {
    this._call = call;
  }
}

export class PurchaseInsuranceCall extends ethereum.Call {
  get inputs(): PurchaseInsuranceCall__Inputs {
    return new PurchaseInsuranceCall__Inputs(this);
  }

  get outputs(): PurchaseInsuranceCall__Outputs {
    return new PurchaseInsuranceCall__Outputs(this);
  }
}

export class PurchaseInsuranceCall__Inputs {
  _call: PurchaseInsuranceCall;

  constructor(call: PurchaseInsuranceCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get prices(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get quantities(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get referenceTokenPrice(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get referenceNormalizationFactor(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get txHash(): string {
    return this._call.inputValues[6].value.toString();
  }

  get v(): i32 {
    return this._call.inputValues[7].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[9].value.toBytes();
  }
}

export class PurchaseInsuranceCall__Outputs {
  _call: PurchaseInsuranceCall;

  constructor(call: PurchaseInsuranceCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateBlackListedUserCall extends ethereum.Call {
  get inputs(): UpdateBlackListedUserCall__Inputs {
    return new UpdateBlackListedUserCall__Inputs(this);
  }

  get outputs(): UpdateBlackListedUserCall__Outputs {
    return new UpdateBlackListedUserCall__Outputs(this);
  }
}

export class UpdateBlackListedUserCall__Inputs {
  _call: UpdateBlackListedUserCall;

  constructor(call: UpdateBlackListedUserCall) {
    this._call = call;
  }

  get which(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get access(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdateBlackListedUserCall__Outputs {
  _call: UpdateBlackListedUserCall;

  constructor(call: UpdateBlackListedUserCall) {
    this._call = call;
  }
}

export class UpdateInsuranceFeeCall extends ethereum.Call {
  get inputs(): UpdateInsuranceFeeCall__Inputs {
    return new UpdateInsuranceFeeCall__Inputs(this);
  }

  get outputs(): UpdateInsuranceFeeCall__Outputs {
    return new UpdateInsuranceFeeCall__Outputs(this);
  }
}

export class UpdateInsuranceFeeCall__Inputs {
  _call: UpdateInsuranceFeeCall;

  constructor(call: UpdateInsuranceFeeCall) {
    this._call = call;
  }

  get newInsuranceFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateInsuranceFeeCall__Outputs {
  _call: UpdateInsuranceFeeCall;

  constructor(call: UpdateInsuranceFeeCall) {
    this._call = call;
  }
}

export class UpdateInsuranceFundsWalletCall extends ethereum.Call {
  get inputs(): UpdateInsuranceFundsWalletCall__Inputs {
    return new UpdateInsuranceFundsWalletCall__Inputs(this);
  }

  get outputs(): UpdateInsuranceFundsWalletCall__Outputs {
    return new UpdateInsuranceFundsWalletCall__Outputs(this);
  }
}

export class UpdateInsuranceFundsWalletCall__Inputs {
  _call: UpdateInsuranceFundsWalletCall;

  constructor(call: UpdateInsuranceFundsWalletCall) {
    this._call = call;
  }

  get newInsuranceFundsWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateInsuranceFundsWalletCall__Outputs {
  _call: UpdateInsuranceFundsWalletCall;

  constructor(call: UpdateInsuranceFundsWalletCall) {
    this._call = call;
  }
}

export class UpdateMinerNftCall extends ethereum.Call {
  get inputs(): UpdateMinerNftCall__Inputs {
    return new UpdateMinerNftCall__Inputs(this);
  }

  get outputs(): UpdateMinerNftCall__Outputs {
    return new UpdateMinerNftCall__Outputs(this);
  }
}

export class UpdateMinerNftCall__Inputs {
  _call: UpdateMinerNftCall;

  constructor(call: UpdateMinerNftCall) {
    this._call = call;
  }

  get newMinerNft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateMinerNftCall__Outputs {
  _call: UpdateMinerNftCall;

  constructor(call: UpdateMinerNftCall) {
    this._call = call;
  }
}

export class UpdateTokenRegistryCall extends ethereum.Call {
  get inputs(): UpdateTokenRegistryCall__Inputs {
    return new UpdateTokenRegistryCall__Inputs(this);
  }

  get outputs(): UpdateTokenRegistryCall__Outputs {
    return new UpdateTokenRegistryCall__Outputs(this);
  }
}

export class UpdateTokenRegistryCall__Inputs {
  _call: UpdateTokenRegistryCall;

  constructor(call: UpdateTokenRegistryCall) {
    this._call = call;
  }

  get newTokenRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateTokenRegistryCall__Outputs {
  _call: UpdateTokenRegistryCall;

  constructor(call: UpdateTokenRegistryCall) {
    this._call = call;
  }
}
