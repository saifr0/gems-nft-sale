type AllowedTokenUpdated @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  status: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BlacklistUpdated @entity(immutable: true) {
  id: Bytes!
  which: Bytes! # address
  accessNow: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BuyEnableUpdated @entity(immutable: true) {
  id: Bytes!
  oldAccess: Boolean! # bool
  newAccess: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InsuranceFeeUpdated @entity(immutable: true) {
  id: Bytes!
  oldInsuranceFee: BigInt! # uint256
  newInsuranceFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InsuranceFundsWalletUpdated @entity(immutable: true) {
  id: Bytes!
  oldInsuranceFundsWallet: Bytes! # address
  newInsuranceFundsWallet: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MinerFundsWalletUpdated @entity(immutable: true) {
  id: Bytes!
  oldMinerFundsWallet: Bytes! # address
  newMinerFundsWallet: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MinerNftPurchased @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  tokenPrice: BigInt! # uint256
  by: Bytes! # address
  minerPrices: [BigInt!]! # uint256[3]
  quantities: [BigInt!]! # uint256[3]
  amountPurchased: BigInt! # uint256
  isInsured: Boolean! # bool
  insuranceAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MinerNftPurchasedDiscounted @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  tokenPrice: BigInt! # uint256
  by: Bytes! # address
  minerPrices: [BigInt!]! # uint256[3]
  quantities: [BigInt!]! # uint256[3]
  code: String! # string
  amountPurchased: BigInt! # uint256
  leaders: [Bytes!]! # address[]
  percentages: [BigInt!]! # uint256[]
  discountPercentage: BigInt! # uint256
  isInsured: Boolean! # bool
  insuranceAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NodeFundsWalletUpdated @entity(immutable: true) {
  id: Bytes!
  oldNodeFundsWallet: Bytes! # address
  newNodeFundsWallet: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NodeNftPriceUpdated @entity(immutable: true) {
  id: Bytes!
  oldPrice: BigInt! # uint256
  newPrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NodeNftPurchased @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  tokenPrice: BigInt! # uint256
  by: Bytes! # address
  amountPurchased: BigInt! # uint256
  quantity: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferStarted @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PriceAccretionPercentageUpdated @entity(immutable: true) {
  id: Bytes!
  oldPriceAccretionPercent: BigInt! # uint256
  newPriceAccretionPercent: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SignerUpdated @entity(immutable: true) {
  id: Bytes!
  oldSigner: Bytes! # address
  newSigner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenRegistryUpdated @entity(immutable: true) {
  id: Bytes!
  oldTokenRegistry: Bytes! # address
  newTokenRegistry: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
